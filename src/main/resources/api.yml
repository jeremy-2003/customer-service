openapi: 3.0.3
info:
  title: Customer Service API
  description: Reactive API for managing bank customers.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server
paths:
  /api/customers:
    post:
      summary: Create a new customer
      operationId: createCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
      responses:
        "201":
          description: Customer successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
    get:
      summary: Retrieve all customers
      operationId: getAllCustomers
      responses:
        "200":
          description: Customers retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerListResponse"
  /api/customers/{id}:
    get:
      summary: Retrieve customer by ID
      operationId: getCustomerById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Customer details retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
    put:
      summary: Update customer details
      operationId: updateCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
      responses:
        "200":
          description: Customer successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
    delete:
      summary: Delete a customer
      operationId: deleteCustomer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Customer successfully deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
  /api/customers/type/{type}:
    get:
      summary: Retrieve customers by type
      operationId: getCustomerByType
      parameters:
        - name: type
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/CustomerType"
      responses:
        "200":
          description: Customers retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerListResponse"
  /api/customers/{customerId}/vip-pym/status:
    put:
      summary: Update VIP PYM status
      operationId: updateVipPymStatus
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
        - name: isVipPym
          in: query
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: VIP PYM status updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
components:
  schemas:
    CustomerType:
      type: string
      enum: [PERSONAL, BUSINESS]
    Customer:
      type: object
      properties:
        id:
          type: string
        fullName:
          type: string
        documentNumber:
          type: string
        customerType:
          $ref: "#/components/schemas/CustomerType"
        email:
          type: string
        phone:
          type: string
        createdAt:
          type: string
          format: date-time
        modifyAt:
          type: string
          format: date-time
        status:
          type: string
        isVipPym:
          type: boolean
    BaseResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        data:
          $ref: "#/components/schemas/Customer"
    CustomerListResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        data:
          type: array
          items:
            $ref: "#/components/schemas/Customer"